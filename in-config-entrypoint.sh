#!/bin/sh
#
# Entrypoint wrapper (generated by EV)
#
# This script populates your environment variables which relied on deprecated in-config.yaml features.
# To read about these features and why they have been removed, see https://invisionapp.atlassian.net/wiki/x/VoSVNQ
#
set -e # bail on any error

if [ -z "$(command -v tr)" ]; then
  echo "missing tr"
  exit 1
fi

if [ -z "$(command -v sed)" ]; then
  echo "missing sed"
  exit 1
fi

to_lower() {
  echo "${1}" | tr '[:upper:]' '[:lower:]'
}

to_upper() {
  echo "${1}" | tr '[:lower:]' '[:upper:]'
}

dash_to_under() {
  echo "${1}" | tr '-' '_'
}

under_to_dash() {
  echo "${1}" | tr '_' '-'
}

processVar() {
  currentVal=$(eval "echo \$${1?}")
  if [ -n "${currentVal}" ]; then
    echo "warn: $1 is already set to '$currentVal', skipping"
    return
  fi

  stripped=$(echo $2 | sed -e 's/\$\$/$/g')       # replace $$ with $ to resolve metadata vars
  stripped=$(echo $stripped | sed -e 's/;/\;/g')  # replace ; with \; so the eval doesn't treat it as a command
  stripped=$(echo $stripped | sed -e 's/&/\&/g')  # replace & with \& so the eval doesn't treat it as a command
  stripped=$(echo $stripped | sed -e 's/(/\\(/g') # replace & with \( so the eval doesn't treat it as a subshell
  stripped=$(echo $stripped | sed -e 's/)/\\)/g') # replace & with \) so the eval doesn't treat it as a subshell

  finalVal=$(eval "echo $stripped")
  export ${1?}="${finalVal?}"
}

exec "$@"
